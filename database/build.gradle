apply plugin: 'java'


repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    //loggers
    implementation group: 'ch.qos.logback', name: 'logback-core', version: '1.2.9'
    implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.9'
    //junit
    implementation group: 'junit', name: 'junit', version: '4.13.2'
    //Database
    implementation group: 'com.h2database', name: 'h2', version: '2.0.202'
    //jooq
    implementation group: 'org.jooq', name: 'jooq', version: '3.15.5'
    implementation group: 'org.jooq', name: 'jooq-meta', version: '3.15.5'
    implementation group: 'org.jooq', name: 'jooq-codegen', version: '3.15.5'
    //config
    implementation group: 'io.github.yusufsdiscordbot', name: 'config', version: '1.0.2'
    //annotations
    implementation group: 'io.github.yusufsdiscordbot', name: 'annotations', version: '1.0.8'
    implementation 'org.jetbrains:annotations:23.0.0'
}

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        classpath 'org.jooq:jooq-codegen:3.15.5'
        classpath 'com.h2database:h2:2.0.202'
    }
}

import org.jooq.codegen.GenerationTool
import org.jooq.meta.jaxb.*

GenerationTool.generate(new Configuration()
        .withJdbc(new Jdbc()
                .withDriver('org.h2.Driver')
                .withUrl('jdbc:h2:~/test-gradle')
                .withUser('sa')
                .withPassword(''))
        .withGenerator(new Generator()
                .withDatabase(new Database())
                .withGenerate(new Generate()
                        .withPojos(true)
                        .withDaos(true))
                .withTarget(new Target()
                        .withPackageName('org.jooq.example.gradle.db')
                        .withDirectory('src/main/java'))))



test {
    useJUnitPlatform()
}